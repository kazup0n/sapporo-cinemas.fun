service: sapporo-cinema-functions

provider:
  name: aws
  runtime: nodejs6.10
  region: ap-northeast-1

custom:
  bucket:
      dev: sapporo-cinema-public-dev
      prd: sapporo-cinema-public-prd
  logLevel:
    dev: 'debug'
    prd: 'info'

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:PutObject"
      Resource:
        Fn::Join:
        - ''
        - - Fn::GetAtt:
            - StaticContentsS3
            - Arn
          - "/*"

functions:
  start_crawler:
    handler: handler.start_crawler
    environment:
      bucketName:  ${self:custom.bucket.${self:provider.stage}}
      logLevel: ${self:custom.logLevel.${self:provider.stage}}
      stage: ${self:provider.stage}
    events:
      - schedule: cron(5 15 * * ? *)

resources:
  Resources:
    StaticContentsS3:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucket.${self:provider.stage}}
    StaticContentsCDN:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Enabled: true
          Comment: "Delivery static contents"
          PriceClass: PriceClass_200
          DefaultRootObject: index.html
          Origins:
            - Id: S3Origin
              DomainName:
                Fn::GetAtt:
                  - StaticContentsS3
                  - DomainName
              S3OriginConfig:
                OriginAccessIdentity:
                  Fn::Join:
                    - "/"
                    - - origin-access-identity/cloudfront
                      - Ref: StaticCloudFrontOriginAccessIdentity
          DefaultCacheBehavior:
            AllowedMethods:
              - HEAD
              - GET
            CachedMethods:
              - HEAD
              - GET
            Compress: true
            DefaultTTL: 900
            MaxTTL: 1200
            MinTTL: 600
            ForwardedValues:
              QueryString: true
            SmoothStreaming: false
            TargetOriginId: S3Origin
            ViewerProtocolPolicy: redirect-to-https
    StaticCloudFrontOriginAccessIdentity:
      Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
      Properties:
        CloudFrontOriginAccessIdentityConfig:
          Comment:
            Ref: AWS::StackName
    StaticContentsS3Policy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: StaticContentsS3
        PolicyDocument:
          Statement:
          - Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - " "
                  - - "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity"
                    - Ref: StaticCloudFrontOriginAccessIdentity
            Action: s3:GetObject
            Resource:
              Fn::Join:
              - "/"
              - - Fn::GetAtt:
                  - StaticContentsS3
                  - Arn
                - "*"
